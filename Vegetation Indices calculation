# Packages

library(terra)
library(raster)
library(sf)
library(RStoolbox)
library(purrr)

# Import composites 

list <- list.files(path = "/home/alessio/Synthesis/composites", pattern = "20", full.names = TRUE, recursive = TRUE) %>%
  map(~stack(.)/10000) # apply radiometric calibration
  
#### NDVI ####

# Calculate the NDVI

ndvi <- map_at(list, c(1:15), spectralIndices,  # for RapidEye imagery
                         blue = 1,
                         green = 2,
                         red = 3,
                         redEdge1 = 4,
                         nir = 5,
                         indices = "NDVI") 

ndvi <- map_at(ndvi, c(16:43), spectralIndices, # for PS2 imagery
               blue = 1,
               green = 2,
               red = 3,
               nir = 4,
               indices = "NDVI")

ndvi <- map(ndvi, raster) # Convert to RasterLayer

# Export
setwd("/home/alessio/Synthesis/NDVI")

writeRaster(x = kndvi[[43]],
            filename = "ndvi_2024_05_14.tif",
            format = "GTiff",
            datatype = 'FLT4S',
            overwrite = T)

#### KNDVI ####

# Calculate the KNDVI (Kernel Normalized Difference Vegetation Index)

kndvi <- map_at(list, c(1:15), spectralIndices,
                         blue = 1,
                         green = 2,
                         red = 3,
                         redEdge1 = 4,
                         nir = 5,
                         indices = "KNDVI")

kndvi <- map_at(kndvi, c(16:43), spectralIndices,
         blue = 1,
         green = 2,
         red = 3,
         nir = 4,
         indices = "KNDVI")

kndvi <- map(kndvi, raster) # Convert to RasterLayer

# Export
setwd("/home/alessio/Synthesis/KNDVI")

writeRaster(x = kndvi[[43]],
            filename = "kndvi_2024_05_14.tif",
            format = "GTiff",
            datatype = 'FLT4S',
            overwrite = T)

# walk(names(ndvi), function(name) {
#   terra::writeRaster(classificazione_NNE_list[[name]],
#                      filename = paste0(name, "NNE.tif"),
#                      overwrite=TRUE)
# })
